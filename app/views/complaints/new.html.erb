<h1>File Complain</h1>

<!-- Fill up the form. 
Submit button triggers getLocation and gets info from form, and sends it tgt to controller thru JS request -->
<div class ="container">
    <table>
        <tr>
            <td>Take a Picture</td>
            <td><%=file_field(:avatar, accept:'image/*', id:"file-input")%></td>
        </tr>
        <tr>
            <td>Comment</td>
            <td><input type="text" id="comment"></td>
        </tr>
        <tr>
            <td><button type="button" onclick="getLocation()">Submit</button></td>
        </tr>
    </table>
</div>

<hr/>

<!-- LOCATION FINDER -->
<div class="container">
    <h5 id="demo"></h5>  
</div>

<script>

var x = document.getElementById("demo");
var input = document.querySelector('input[type=file]'); // see Example 4
var comment = document.getElementById("comment")

// prompt user for permission as page loads
function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition,showError);
    } else { 
        x.innerHTML = "Geolocation is not supported by this browser.";
    }
}

// if yes, display current coordinate
function showPosition(position) {
    x.innerHTML = "Latitude: " + position.coords.latitude + 
    "<br>Longitude: " + position.coords.longitude;

        var file = input.files[0];

		var form = new FormData()
		xhr = new XMLHttpRequest();

        xhr.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            console.log("crap")
            window.location = "/";
         }
         }

		form.append('avatar', file);
		form.append('longitude',position.coords.longitude)
		form.append('latitude',position.coords.latitude)
		form.append('comment',comment.value)
		xhr.open('post', 'create', true);
		xhr.send(form)




	
}

// taking care of errors
function showError(error) {
    switch(error.code) {
        case error.PERMISSION_DENIED:
            x.innerHTML = "User denied the request for Geolocation."
            break;
        case error.POSITION_UNAVAILABLE:
            x.innerHTML = "Location information is unavailable."
            break;
        case error.TIMEOUT:
            x.innerHTML = "The request to get user location timed out."
            break;
        case error.UNKNOWN_ERROR:
            x.innerHTML = "An unknown error occurred."
            break;
    }
}

</script>
